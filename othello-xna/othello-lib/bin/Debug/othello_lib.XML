<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>othello_lib</name></assembly>
<members>
<member name="M:GameBoard.GetPossibleMoves(System.Collections.Generic.IEnumerable{SquareItem.Square},SquareItem.SquareState)">

</member>
<member name="M:GameBoard.PutColor(System.Collections.Generic.IEnumerable{SquareItem.Square}@,System.Int32,System.Int32,SquareItem.SquareState)">

</member>
<member name="M:GameBoard.CanPutPiece(System.Collections.Generic.IEnumerable{SquareItem.Square},SquareItem.SquareState,System.Int32,System.Int32)">
<summary>
 Returns true if the color can be put in the (i,j) place.
</summary>
</member>
<member name="M:GameBoard.GetEnemyColor(SquareItem.SquareState)">

</member>
<member name="M:GameBoard.CanFindColorOnLine(System.Collections.Generic.IEnumerable{SquareItem.Square},System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,SquareItem.SquareState)">

</member>
<member name="M:Minimax.MinimaxController.RunNext(System.Collections.Generic.IEnumerable{SquareItem.Square},SquareItem.SquareState,System.Int32,System.Int32@,System.Int32@,System.Boolean,System.Collections.Generic.IEnumerable{SquareItem.Square})">
<summary>
 Runs th enext iteration of Minimax, i.e. goes one node lower down the game tree.
</summary>
</member>
<member name="M:Minimax.MinimaxController.RunMinimax(System.Collections.Generic.IEnumerable{SquareItem.Square}@,SquareItem.SquareState,SquareItem.Square,System.Int32,System.Int32@,System.Int32@,System.Boolean)">
<summary>
 Runs the minimax aglorithm. If the maximum depth is reached, then the evaluation function is invoked and the result for this game
 tree leaf node is calculated, else the next level of the game tree is investigated, where color and isMaximizing are
 changed.
</summary>
</member>
<member name="M:Minimax.MinimaxController.Evaluate(System.Collections.Generic.IEnumerable{SquareItem.Square},SquareItem.SquareState)">
<summary>
  Initializes the minimax game tree search.
</summary>
</member>
<member name="M:Minimax.MinimaxController.ChangeSquareState(System.Collections.Generic.IEnumerable{SquareItem.Square}@,SquareItem.SquareState,System.Int32,System.Int32)">
<summary>
 Changes the square state of the given board, by reference.
</summary>
</member>
</members>
</doc>
